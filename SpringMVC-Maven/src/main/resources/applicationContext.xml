<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 配置读取外部配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 可以使用注解 -->
    <context:component-scan base-package="cn.jxufe.web" />
    
    <!-- 数据源1,dbcp连接池 -->  
    <bean id="dataSource_wangyiran" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- Connection Pooling Info -->
        <property name="maxIdle" value="${dbcp.maxIdle}" />
        <property name="maxActive" value="${dbcp.maxActive}" />
        <property name="defaultAutoCommit" value="false" />
        <property name="timeBetweenEvictionRunsMillis" value="3600000" />
        <property name="minEvictableIdleTimeMillis" value="3600000" />
    </bean>
    
    <!-- 数据源2 -->  
    <bean id="dataSource_test" class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
            <property name="driverClassName" value="${jdbc.driverClassName}" />  
            <property name="url" value="${jdbc.url2}" />  
            <property name="username" value="${jdbc.username2}" />  
            <property name="password" value="${jdbc.password2}" />  
    </bean>
    <!-- 多数据源配置 -->
    <bean id="dataSource" class="cn.jxufe.web.util.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="wangyiran" value-ref="dataSource_wangyiran" />
                <entry key="test" value-ref="dataSource_test" />
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource_wangyiran" />
    </bean>
    
    <!--sqlSessionFactory  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
            <property name="dataSource" ref="dataSource" />  
            <!-- <property name="configLocation" value="classpath:mybatis-config.xml" />  
            <property name="mapperLocations" value="classpath:mapper/userMapper.xml" />   -->
    </bean>  

    <!-- 如果只有一个数据源的话可以不用指定 -->
    <!-- <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
	    <constructor-arg index="0"> 
	       <ref bean="sqlSessionFactory"/>   
        </constructor-arg>
    </bean>  --> 
    
    <!--动态代理实现 不用写dao的实现 -->  
    <bean id="MapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
            <!-- 这里的basePackage 指定了dao层接口路径，这里的dao接口不用自己实现 -->  
            <property name="basePackage" value="cn.jxufe.web.dao" />  
            <!-- 如果只有一个数据源的话可以不用指定，但是如果有多个数据源的话必须要指定 -->  
            <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> -->
            <!--直接指定了sqlsessionTemplate名称，这个和上面的其实是一样的 -->  
            <!-- <property name="sqlSessionTemplateBeanName" value="sqlSession" />  -->
    </bean>  

    <!--事务管理器 -->  
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
            <property name="dataSource" ref="dataSource" />  
    </bean>  
    <!-- 使用全注释事务 -->  
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <!-- 激活自动代理功能 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 动态切换数据源 -->
    <bean id="dataSourceExchange" class="cn.jxufe.web.aop.DataSourceExchange" ></bean>
    <aop:config>
         <aop:pointcut id="dataSourcePoint"
         expression="execution(* cn.jxufe.web.service.impl..*.*(..)) "/>  
         <aop:advisor pointcut-ref="dataSourcePoint" advice-ref="dataSourceExchange"/>
     </aop:config>
</beans>